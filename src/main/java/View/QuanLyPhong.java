/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.FileData;
import Model.Phong;
import Model.PhongLyThuyet;
import Model.PhongThucHanh;
import Model.TaiKhoan;
import Model.VanPhong;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author PC
 */
public class QuanLyPhong extends javax.swing.JFrame {

    private DefaultTableModel modelPhongLyThuyet;
    private DefaultTableModel modelPhongThucHanh;
    private DefaultTableModel modelVanPhong;
    FileData file = new FileData();
    ArrayList<Phong> ds = new ArrayList<>(file.readFile("Phong.txt"));

    public void showMessage(String str) {
        JOptionPane.showMessageDialog(this, str);
    }

    /**
     * Creates new form QuanLyPhong
     */
    public QuanLyPhong() {
        initComponents();
        cbbLoaiPhong.addItem("Lý thuyết");
        cbbLoaiPhong.addItem("Thực hành");
        cbbLoaiPhong.addItem("Văn Phòng");

        modelPhongLyThuyet = (DefaultTableModel) tbPhongLyThuyet.getModel();
        modelPhongThucHanh = (DefaultTableModel) tbPhongThucHanh.getModel();
        modelVanPhong = (DefaultTableModel) tbVanPhong.getModel();

        this.showTablePhong();
    }

    public void showTablePhong() {
        modelPhongLyThuyet.setRowCount(0);
        modelPhongThucHanh.setRowCount(0);
        modelVanPhong.setRowCount(0);

        for (Phong d : ds) {
            if (d instanceof PhongLyThuyet) {
                modelPhongLyThuyet.addRow(new Object[]{
                    d.getTk().getTaiKhoan(), d.getTk().getMatKhau(), d.getMaPhong(),
                     d.getTenPhong(), d.getViTriPhong(), "Lý thuyết"
                });
            } else if (d instanceof PhongThucHanh) {
                modelPhongThucHanh.addRow(new Object[]{
                    d.getTk().getTaiKhoan(), d.getTk().getMatKhau(), d.getMaPhong(),
                     d.getTenPhong(), d.getViTriPhong(), "Thực hành"
                });
            } else {
                modelVanPhong.addRow(new Object[]{
                    d.getTk().getTaiKhoan(), d.getTk().getMatKhau(), d.getMaPhong(),
                     d.getTenPhong(), d.getViTriPhong(), "Văn Phòng"
                });
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPhongLyThuyet = new javax.swing.JTable();
        btXoa = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMaPhong = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTenPhong = new javax.swing.JTextField();
        txtTaiKhoan = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JTextField();
        txtViTriPhong = new javax.swing.JTextField();
        cbbLoaiPhong = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btThem = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbVanPhong = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbPhongThucHanh = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 255, 102));
        jLabel1.setText("Quản lý các phòng");

        tbPhongLyThuyet.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbPhongLyThuyet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tài khoản", "Mật khẩu", "Mã phòng", "Tên phòng", "Vị trí phòng", "Loại Phòng"
            }
        ));
        tbPhongLyThuyet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPhongLyThuyetMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbPhongLyThuyet);

        btXoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btXoa.setText("Xóa");
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Thoát");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Sửa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Mã Phòng:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Tên Phòng:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Tài khoản:");

        txtMaPhong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Mật khẩu:");

        txtTenPhong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtTaiKhoan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Vị trí phòng:");

        txtMatKhau.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtViTriPhong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Loại phòng:");

        btThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btThem.setText("Thêm");
        btThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemActionPerformed(evt);
            }
        });

        tbVanPhong.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbVanPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tài khoản", "Mật khẩu", "Mã phòng", "Tên phòng", "Vị trí phòng", "Loại Phòng"
            }
        ));
        tbVanPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbVanPhongMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbVanPhong);

        tbPhongThucHanh.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbPhongThucHanh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tài khoản", "Mật khẩu", "Mã phòng", "Tên phòng", "Vị trí phòng", "Loại Phòng"
            }
        ));
        tbPhongThucHanh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPhongThucHanhMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbPhongThucHanh);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Văn Phòng");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Phòng lý thuyết");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Phòng thực hành");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(415, 415, 415)
                .addComponent(btThem, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(484, 484, 484)
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(78, 78, 78)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 17, Short.MAX_VALUE)))
                        .addGap(68, 68, 68))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtViTriPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbbLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(350, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel3)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(txtViTriPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btThem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(140, 140, 140))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new MenuAdmin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
//Xử lý sự kiện thêm phòng
    private void btThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemActionPerformed
        // TODO add your handling code here:
        if (txtTaiKhoan.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Tài khoản không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (txtMatKhau.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Mật khẩu không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (txtMaPhong.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Mã phòng không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (txtTenPhong.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Tên phòng không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (txtViTriPhong.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Vị trí phòng không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (!txtMatKhau.getText().matches("^((?=.*[A-Z]).(?=.*[a-z])(?=.*[0-9])(?=.*[&^*%!$#@])).{8,}$")) {
            JOptionPane.showMessageDialog(null, "Mật khẩu phải đủ chữ hoa, thường, số và 8 ký tự trở lên!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (ds == null) {
            them();
        } else {
            if (checkTk(txtTaiKhoan.getText()) || getPhong(txtMaPhong.getText()) != null) {
                JOptionPane.showMessageDialog(null, "Tài khoản hoặc mã phòng đã tồn tại!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                them();
                JOptionPane.showMessageDialog(null, "Thêm tài khoản thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        this.showTablePhong();
    }//GEN-LAST:event_btThemActionPerformed
//Xử lý sư kiện xóa phòng
    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        // TODO add your handling code here:
        int indexSelectLyThuyet = tbPhongLyThuyet.getSelectedRow();
        int indexSelectThucHanh = tbPhongThucHanh.getSelectedRow();
        int indexSelectVanPhong = tbVanPhong.getSelectedRow();

        if (ds.size() == 0) {
            JOptionPane.showMessageDialog(null, "Danh sách phòng đang rỗng");
        } else if (indexSelectLyThuyet == -1 && indexSelectThucHanh == -1 && indexSelectVanPhong == -1) {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn phòng nào để xóa!");
        } else {
            // Lấy mô hình dữ liệu của bảng

            // Lấy số lượng cột trong bảng
            // int columnCount = modelPhongLyThuyet.getColumnCount();
            // Lấy giá trị dữ liệu đã chọn
            int choose = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
            if (choose == JOptionPane.YES_OPTION) {
                if (indexSelectLyThuyet != -1) {
                    String maPhong = (String) modelPhongLyThuyet.getValueAt(indexSelectLyThuyet, 2);
                    Phong x = new PhongLyThuyet(maPhong);
                    ds.remove(x);
                }
                if (indexSelectThucHanh != -1) {
                    String maPhong = (String) modelPhongThucHanh.getValueAt(indexSelectThucHanh, 2);
                    Phong x = new PhongThucHanh(maPhong);
                    ds.remove(x);
                }
                if (indexSelectVanPhong != -1) {
                    String maPhong = (String) modelVanPhong.getValueAt(indexSelectVanPhong, 2);
                    Phong x = new VanPhong(maPhong);
                    ds.remove(x);
                }

                file.writeFile(ds, "Phong.txt");
                this.showTablePhong();
            }

        }

    }//GEN-LAST:event_btXoaActionPerformed

//Xử lý sự kiện sửa thông tin phòng
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (txtTaiKhoan.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Tài khoản không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (txtMatKhau.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Mật khẩu không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (txtMaPhong.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Mã phòng không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (txtTenPhong.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Tên phòng không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (txtViTriPhong.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Vị trí phòng không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (!txtMatKhau.getText().matches("^((?=.*[A-Z]).(?=.*[a-z])(?=.*[0-9])(?=.*[&^*%!$#@])).{8,}$")) {
            JOptionPane.showMessageDialog(null, "Mật khẩu phải đủ chữ hoa, thường, số và 8 ký tự trở lên!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(checkTk(txtTaiKhoan.getText())){
            JOptionPane.showMessageDialog(null, "Tài khoản đã tồn tại ạ!");
        }else if(getPhong(txtMaPhong.getText()) == null){
            JOptionPane.showMessageDialog(null, "Phòng không tồn tại ạ!");
        }else{
           // if(cbbLoaiPhong.getSelectedItem().toString().equals("Lý thuyết")){
                //Phong x = new PhongLyThuyet(txtMaPhong.getText());
               // ds.remove(getPhong(txtMaPhong.getText()));
              //  them();
            //}else if(cbbLoaiPhong.getSelectedItem().toString().equals("Thực hành")){
               // Phong x = new PhongThucHanh(txtMaPhong.getText());
               // ds.remove(getPhong(txtMaPhong.getText()));
               // them();
            //}else{
                //Phong x = new VanPhong(txtMaPhong.getText());
                ds.remove(getPhong(txtMaPhong.getText()));
                them();
            //}
            JOptionPane.showMessageDialog(null, "Sửa thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            this.showTablePhong();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tbPhongLyThuyetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPhongLyThuyetMouseClicked
        // TODO add your handling code here:
        int SelectedRow = tbPhongLyThuyet.getSelectedRow();
        
        if(SelectedRow >= 0){
            String ma = (String)tbPhongLyThuyet.getValueAt(SelectedRow, 2);
            
            Phong x = (PhongLyThuyet)getPhong(ma);
            txtTaiKhoan.setText(x.getTk().getTaiKhoan());
            txtMatKhau.setText(x.getTk().getMatKhau());
            txtMaPhong.setText(x.getMaPhong());
            txtTenPhong.setText(x.getTenPhong());
            txtViTriPhong.setText(x.getViTriPhong());
            cbbLoaiPhong.setSelectedIndex(0);
        }
    }//GEN-LAST:event_tbPhongLyThuyetMouseClicked

    private void tbPhongThucHanhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPhongThucHanhMouseClicked
        // TODO add your handling code here:
         int SelectedRow = tbPhongThucHanh.getSelectedRow();
        
        if(SelectedRow >= 0){
            String ma = (String)tbPhongThucHanh.getValueAt(SelectedRow, 2);
            
            Phong x = (PhongThucHanh)getPhong(ma);
            txtTaiKhoan.setText(x.getTk().getTaiKhoan());
            txtMatKhau.setText(x.getTk().getMatKhau());
            txtMaPhong.setText(x.getMaPhong());
            txtTenPhong.setText(x.getTenPhong());
            txtViTriPhong.setText(x.getViTriPhong());
            cbbLoaiPhong.setSelectedIndex(1);
        }
    }//GEN-LAST:event_tbPhongThucHanhMouseClicked

    private void tbVanPhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbVanPhongMouseClicked
        // TODO add your handling code here:
         int SelectedRow = tbVanPhong.getSelectedRow();
        
        if(SelectedRow >= 0){
            String ma = (String)tbVanPhong.getValueAt(SelectedRow, 2);
            
            Phong x = (VanPhong)getPhong(ma);
            txtTaiKhoan.setText(x.getTk().getTaiKhoan());
            txtMatKhau.setText(x.getTk().getMatKhau());
            txtMaPhong.setText(x.getMaPhong());
            txtTenPhong.setText(x.getTenPhong());
            txtViTriPhong.setText(x.getViTriPhong());
            cbbLoaiPhong.setSelectedIndex(2);
        }
    }//GEN-LAST:event_tbVanPhongMouseClicked

    public Phong getPhong(String maPhong){
        for (Phong d : ds) {
            if(d.getMaPhong().equals(maPhong))
                return d;
        }
        return null;
    }
    //Kiểm tra xem tài khoản đã tồn tại chưa
    public boolean checkTk(String tk) {
        if (ds != null) {
            for (Phong d : ds) {
                if (d.getTk().getTaiKhoan().equals(tk)) {
                    return true;
                }
            }
        }
        return false;
    }
    //Thêm phòng vào file

    public void them() {
        if (cbbLoaiPhong.getSelectedItem().toString().equals("Lý thuyết")) {
            PhongLyThuyet x = new PhongLyThuyet();
            x.setMaPhong(txtMaPhong.getText());
            TaiKhoan tk = new TaiKhoan();
            tk.setTaiKhoan(txtTaiKhoan.getText());
            tk.setMatKhau(txtMatKhau.getText());
            x.setTk(tk);
            x.setTenPhong(txtTenPhong.getText());
            x.setViTriPhong(txtViTriPhong.getText());
            ds.add(x);
            file.writeFile(ds, "Phong.txt");
        } else if (cbbLoaiPhong.getSelectedItem().toString().equals("Thực hành")) {
            PhongThucHanh x = new PhongThucHanh();
            x.setMaPhong(txtMaPhong.getText());
            TaiKhoan tk = new TaiKhoan();
            tk.setTaiKhoan(txtTaiKhoan.getText());
            tk.setMatKhau(txtMatKhau.getText());
            x.setTk(tk);
            x.setTenPhong(txtTenPhong.getText());
            x.setViTriPhong(txtViTriPhong.getText());
            ds.add(x);
            file.writeFile(ds, "Phong.txt");
        } else {
            VanPhong x = new VanPhong();
            x.setMaPhong(txtMaPhong.getText());
            TaiKhoan tk = new TaiKhoan();
            tk.setTaiKhoan(txtTaiKhoan.getText());
            tk.setMatKhau(txtMatKhau.getText());
            x.setTk(tk);
            x.setTenPhong(txtTenPhong.getText());
            x.setViTriPhong(txtViTriPhong.getText());
            ds.add(x);
            file.writeFile(ds, "Phong.txt");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyPhong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btThem;
    private javax.swing.JButton btXoa;
    private javax.swing.JComboBox<String> cbbLoaiPhong;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbPhongLyThuyet;
    private javax.swing.JTable tbPhongThucHanh;
    private javax.swing.JTable tbVanPhong;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtMatKhau;
    private javax.swing.JTextField txtTaiKhoan;
    private javax.swing.JTextField txtTenPhong;
    private javax.swing.JTextField txtViTriPhong;
    // End of variables declaration//GEN-END:variables
}
